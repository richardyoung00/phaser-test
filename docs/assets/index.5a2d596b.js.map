{"version":3,"file":"index.5a2d596b.js","sources":["../../vite/dynamic-import-polyfill","../../src/scenes/Preloader.js","../../public/textures/sokoban_tilesheet.png","../../public/textures/characters.png","../../public/textures/concrete.jpg","../../src/scenes/Game.js","../../src/main.js","../../src/multiplayer/connection.js","../../src/gameState.js"],"sourcesContent":["const p = function polyfill(modulePath = '.', importFunctionName = '__import__') {\n    try {\n        self[importFunctionName] = new Function('u', `return import(u)`);\n    }\n    catch (error) {\n        const baseURL = new URL(modulePath, location);\n        const cleanup = (script) => {\n            URL.revokeObjectURL(script.src);\n            script.remove();\n        };\n        self[importFunctionName] = (url) => new Promise((resolve, reject) => {\n            const absURL = new URL(url, baseURL);\n            // If the module has already been imported, resolve immediately.\n            if (self[importFunctionName].moduleMap[absURL]) {\n                return resolve(self[importFunctionName].moduleMap[absURL]);\n            }\n            const moduleBlob = new Blob([\n                `import * as m from '${absURL}';`,\n                `${importFunctionName}.moduleMap['${absURL}']=m;`\n            ], { type: 'text/javascript' });\n            const script = Object.assign(document.createElement('script'), {\n                type: 'module',\n                src: URL.createObjectURL(moduleBlob),\n                onerror() {\n                    reject(new Error(`Failed to import: ${url}`));\n                    cleanup(script);\n                },\n                onload() {\n                    resolve(self[importFunctionName].moduleMap[absURL]);\n                    cleanup(script);\n                }\n            });\n            document.head.appendChild(script);\n        });\n        self[importFunctionName].moduleMap = {};\n    }\n};__VITE_IS_MODERN__&&p(\"/phaser-test/assets/\");","import Phaser from 'phaser'\n\nimport sokoban_tilesheet from '../../public/textures/sokoban_tilesheet.png'\nimport character from '../../public/textures/characters.png'\nimport concrete from '../../public/textures/concrete.jpg'\n\nexport default class Preloader extends Phaser.Scene {\n    constructor() {\n        super('preloader')\n    }\n\n    preload() {\n        this.load.spritesheet('sokoban', sokoban_tilesheet , {\n            frameWidth: 64\n        })\n        this.load.image('character', character);\n        this.load.image('concrete', concrete);\n    }\n\n    create() {\n        this.scene.start('game')\n    }\n}","export default \"__VITE_ASSET__a7f7b83c__\"","export default \"__VITE_ASSET__abe55e0a__\"","export default \"__VITE_ASSET__b037b885__\"","import Phaser from 'phaser'\n\nexport default class Game extends Phaser.Scene {\n\n    /** @type {Phaser.Types.Input.Keyboard.CursorKeys} */\n    cursors\n\n    /** @type {Phaser.Physics.Arcade.Sprite} */\n    player\n\n    constructor() {\n        super('game')\n        this.player = null\n        this.playerSprites = {}\n    }\n\n    init() {\n\n        this.cursors = this.input.keyboard.addKeys({\n            up: Phaser.Input.Keyboard.KeyCodes.UP,\n            down: Phaser.Input.Keyboard.KeyCodes.DOWN,\n            left: Phaser.Input.Keyboard.KeyCodes.LEFT,\n            right: Phaser.Input.Keyboard.KeyCodes.RIGHT,\n            space: Phaser.Input.Keyboard.KeyCodes.SPACE,\n            shift: Phaser.Input.Keyboard.KeyCodes.SHIFT,\n            up_alt: Phaser.Input.Keyboard.KeyCodes.W,\n            down_alt: Phaser.Input.Keyboard.KeyCodes.S,\n            left_alt: Phaser.Input.Keyboard.KeyCodes.A,\n            right_alt: Phaser.Input.Keyboard.KeyCodes.D\n        });\n        this.connection = this.registry.get('connection')\n        this.gameState = this.registry.get('gameState')\n    }\n\n    create() {\n        const { width, height } = this.scale\n\n        // Set aspect ratio to the same as viewport (may break on portrait or weird sized screens)\n        // const vw = Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0)\n        // const vh = Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0)\n        // this.scale.displaySize.setAspectRatio( vw/vh );\n        // this.scale.refresh();\n\n        const hostId = this.connection.hostId\n        this.peerId = this.connection.peerId\n\n        let ts = this.add.tileSprite(0, 0, 1000, 1000, 'concrete')\n\n        let hostIdText = this.add.text(6,6, 'Game join code: ' + hostId, {font: '12px Arial', fill: '#ffffff'}).setScrollFactor(0);\n\n\n        this.renderPlayerSprites()\n\n        this.input.on('pointermove',  (cursor) => {\n            if (!this.player) {\n                return\n            }\n            const angle = Phaser.Math.Angle.Between(this.player.x, this.player.y, cursor.x + this.cameras.main.scrollX, cursor.y + this.cameras.main.scrollY)\n            this.player.setRotation(angle + (Math.PI/2))\n        })\n\n    }\n\n    renderPlayerSprites() {\n        const allPlayers = this.gameState.getPlayers()\n        for (let p of allPlayers) {\n\n\n            if (!this.playerSprites[p.id]) { //add new sprite\n                this.playerSprites[p.id] = this.physics.add.sprite(p.x, p.y, p.texture).setRotation(p.rotation)\n                if (p.id === this.peerId) {\n                    this.player = this.playerSprites[p.id]\n                    this.cameras.main.startFollow(this.player);\n                }\n\n            } else { // update the existing sprite\n                this.playerSprites[p.id].setX(p.x).setY(p.y).setTexture(p.texture).setRotation(p.rotation)\n            }\n\n        }\n\n    }\n\n    updatePlayer() {\n        let p = {\n            id: this.peerId,\n            x: this.player.x,\n            y: this.player.y,\n            texture: this.player.texture.key,\n            rotation: this.player.rotation,\n        }\n        this.gameState.updatePlayer(p)\n    }\n\n\n    update() {\n\n        if (!this.player) {\n            return\n        }\n        const speed = 200\n\n        if (this.cursors.left.isDown || this.cursors.left_alt.isDown) {\n            this.player.setVelocity(-speed, 0)\n        }\n        else if (this.cursors.right.isDown || this.cursors.right_alt.isDown) {\n            this.player.setVelocity(speed, 0)\n        }\n        else if (this.cursors.up.isDown || this.cursors.up_alt.isDown) {\n            this.player.setVelocity(0, -speed)\n        }\n        else if (this.cursors.down.isDown || this.cursors.down_alt.isDown) {\n            this.player.setVelocity(0, speed)\n        }\n        else {\n            this.player.setVelocity(0, 0)\n        }\n\n        //todo only do this when something changes\n        this.updatePlayer()\n\n\n        this.renderPlayerSprites()\n    }\n}","import Phaser from 'phaser'\n\nimport Preloader from './scenes/Preloader'\nimport Game from './scenes/Game'\nimport Connection from './multiplayer/connection'\nimport GameState from \"./gameState\";\n\nconst connection = new Connection()\nconst gameState = new GameState(connection)\n\nwindow.connection = connection\nwindow.gameState = gameState\n\n\nconst config = {\n\ttype: Phaser.AUTO,\n\twidth: 800,\n\theight: 600,\n\tparent: \"game-container\",\n\tphysics: {\n\t\tdefault: 'arcade',\n\t\tarcade: {\n\t\t\tgravity: { y: 0 }\n\t\t}\n\t},\n\tscale: {\n\t\tmode: Phaser.Scale.FIT,\n\t},\n\tscene: [Preloader, Game]\n}\n\n\nfunction start() {\n\tconst gameSetup = document.querySelector(\"#game-setup\")\n\tgameSetup.style.display = \"none\"\n\n\n\tconst game = new Phaser.Game(config)\n\n\tgame.registry.set('connection', connection)\n\tgame.registry.set('gameState', gameState)\n\n}\n\nfunction hostGame(username) {\n\tgameState.addPlayer({\n\t\tid: connection.peerId,\n\t\tname: username,\n\t\tx: 100,\n\t\ty: 100,\n\t\ttexture: \"character\",\n\t\trotation: 0\n\t})\n\n\tconnection.beginHosting()\n\n\tconst newUrl = window.location.origin + window.location.pathname + '?gameId=' + connection.hostId;\n\twindow.history.pushState({path:newUrl},'',newUrl);\n\n\tstart()\n\n}\n\nasync function joinGame(username, hostId) {\n\tconst playerDetails = {\n\t\tid: connection.peerId,\n\t\tname: username,\n\t\tx: 200,\n\t\ty: 200,\n\t\ttexture: \"character\",\n\t\trotation: 0\n\t}\n\ttry {\n\t\tawait connection.connectToHost(hostId, playerDetails)\n\t\tstart()\n\t} catch(e) {\n\t\talert(\"could not connect to game ID \" + hostId)\n\t}\n}\n\nwindow.onload = function() {\n\n\tconst userNameInput = document.querySelector(\"#username\")\n\tconst joinGameIdInput = document.querySelector(\"#join-game-id\")\n\tconst joinButton = document.querySelector(\"#join-button\")\n\tconst hostButton = document.querySelector(\"#host-button\")\n\n\thostButton.addEventListener('click', () => {\n\t\tif (!userNameInput.value) {\n\t\t\talert(\"Please enter a username\")\n\t\t} else {\n\t\t\thostGame(userNameInput.value)\n\t\t}\n\t})\n\n\tjoinButton.addEventListener('click', () => {\n\t\tif (!userNameInput.value) {\n\t\t\talert(\"Please enter a username\")\n\t\t\treturn\n\t\t}\n\n\t\tif (!joinGameIdInput.value) {\n\t\t\talert(\"Please enter a game ID to join\")\n\t\t\treturn\n\t\t}\n\n\t\tjoinGame(userNameInput.value, joinGameIdInput.value)\n\t})\n\n}\n\n","import Peer from 'peerjs';\n\nexport default class Connection {\n    constructor() {\n        this.isHosting = null\n        this.guestConnections = {}\n        this.hostConnection = null\n        this.peerId = generateId()\n        this.hostId = null\n\n        this.peer = new Peer(this.peerId, {\n            host: 'richard-peerjs-server.herokuapp.com',\n            port: 443,\n            path: '/',\n            secure: true\n        });\n\n        this.peer.on('open', id => {\n            this.peerId = id\n            console.log('Connection to server established. ID is: ' + id);\n        });\n\n        this.peer.on('error', err => {\n            console.log('Error1: ', err);\n            console.log('reconnecting');\n            // todo reconnect\n            this.peer.disconnect()\n            this.peer.reconnect()\n        });\n    }\n\n    async beginHosting() {\n        console.error(\"hosting\")\n        this.isHosting = true\n        this.hostId = this.peerId\n        this.peer.on('connection', async (connection) => {\n            this.guestConnections[connection.peer] = connection\n\n            connection.send(\"hello from host\")\n\n            console.log('Connecting to peer ' + connection.peer);\n            await this.setupConnectionHandlers(connection)\n            //todo handle connection close\n\n            if (this.onGuestConnected) {\n                this.onGuestConnected(connection.peer, connection.metadata)\n            }\n        });\n    }\n\n    async connectToHost(hostId, metadata) {\n        this.isHosting = false\n        console.log(\"connecting to \" + hostId)\n        this.hostConnection = this.peer.connect(hostId, {metadata});\n\n        this.hostConnection.send(\"hello from guest\")\n        this.hostId = this.hostConnection.peer\n        console.log(\"waiting for connection...\")\n        await this.setupConnectionHandlers(this.hostConnection)\n        //todo handle connection close\n        if (this.onConnectedToHost) {\n            this.onConnectedToHost(this.hostConnection.peer, this.hostConnection.metadata)\n        }\n    }\n\n    sendToHost(data) {\n        if (this.isHosting) {\n            throw new Error(\"Cannot send data to host if you are hosting\")\n        }\n        this.hostConnection.send(data);\n    }\n\n    sendToGuest(peerId, data) {\n        if (!this.isHosting) {\n            throw new Error(\"Cannot send data to guest if you are not the host\")\n        }\n        this.guestConnections[peerId].send(data);\n    }\n\n    sendToAllGuests(data) {\n        if (!this.isHosting) {\n            throw new Error(\"Cannot send data to guest if you are not the host\")\n        }\n        for (let peerId of Object.keys(this.guestConnections)) {\n            if (this.guestConnections[peerId].open) {\n                this.guestConnections[peerId].send(data);\n            }\n\n        }\n\n    }\n\n    async ensureConnectionOpen(conn) {\n        return new Promise((resolve, reject) => {\n            if (conn.open) {\n                resolve()\n            }\n            console.log(conn)\n            conn.on('open', function () {\n                console.log(\"Connection open\")\n                resolve()\n            });\n\n            conn.on('error', function (error) {\n                console.error('Connection error', error);\n                reject()\n            });\n\n            this.peer.on('error', err => {\n                console.error(err);\n                reject()\n            });\n        })\n    }\n\n    async setupConnectionHandlers(conn) {\n        await this.ensureConnectionOpen(conn)\n\n        conn.on('data', (data) => {\n            console.log(data)\n            if (this.onMessage) {\n                this.onMessage(data)\n            }\n        });\n\n\n\n        conn.on('close', () => {\n            console.error('Connection closed');\n        });\n\n        // this.conn.send('Hello from ' + this.peer.id);\n    }\n\n}\n\nfunction generateId(length = 6) {\n    let result = '';\n    const characters = 'abcdefghijklmnopqrstuvwxyz0123456789';\n    for (let i = 0; i < length; i++) {\n        result += characters.charAt(Math.floor(Math.random() * characters.length));\n    }\n    return result;\n}\n\n","export default class GameState {\n    constructor(connection) {\n        this.connection = connection\n        this.setupConnectionHandlers()\n\n        this.state = {\n            players: {\n\n            }\n        }\n    }\n\n    onChange() {\n        if (this.connection.isHosting) {\n            this.connection.sendToAllGuests({\n                type: \"game-state\",\n                data: this.state\n            })\n        } else {\n            console.error(\"cannot sent data to all guests if you are not the host\")\n        }\n    }\n\n    sendPlayerStateToHost(player) {\n        if (!this.connection.isHosting) {\n            this.connection.sendToHost({\n                type: \"player-state\",\n                data: player\n            })\n        } else {\n            console.error(\"cannot sent player data to host if you are the host\")\n        }\n\n    }\n\n    setupConnectionHandlers() {\n        this.connection.onGuestConnected = (peerId, metaData) => {\n            console.log(\"connected \" + peerId)\n            this.addPlayer(metaData)\n        }\n\n        this.connection.onMessage = (message) => {\n            switch(message.type) {\n                case \"game-state\":\n                    this.state = message.data\n                    break;\n                case \"player-state\":\n                    this.state.players[message.data.id] = message.data\n                    break;\n            }\n        }\n\n    }\n\n    addPlayer(player) {\n        this.state.players[player.id] = player\n        this.onChange()\n    }\n\n    getPlayers() {\n        return Object.values(this.state.players)\n    }\n\n    updatePlayer(updatedPlayer) {\n        this.state.players[updatedPlayer.id] = {...this.state.players[updatedPlayer.id], ...updatedPlayer}\n\n        if (this.connection.isHosting) {\n            this.onChange()\n        } else {\n            this.sendPlayerStateToHost(this.state.players[updatedPlayer.id])\n        }\n\n\n    }\n\n}"],"names":["modulePath","importFunctionName","Function","error","baseURL","URL","location","cleanup","script","revokeObjectURL","src","remove","url","Promise","resolve","reject","absURL","self","moduleMap","moduleBlob","Blob","type","Object","assign","document","createElement","createObjectURL","[object Object]","Error","head","appendChild","p","Phaser","Scene","load","spritesheet","frameWidth","image","scene","start","player","playerSprites","cursors","this","input","keyboard","addKeys","up","Input","Keyboard","KeyCodes","UP","down","DOWN","left","LEFT","right","RIGHT","space","SPACE","shift","SHIFT","up_alt","W","down_alt","S","left_alt","A","right_alt","D","connection","registry","get","gameState","scale","hostId","peerId","add","tileSprite","text","font","fill","setScrollFactor","renderPlayerSprites","on","cursor","angle","Math","Angle","Between","x","y","cameras","main","scrollX","scrollY","setRotation","PI","allPlayers","getPlayers","p2","id","setX","setY","setTexture","texture","rotation","physics","sprite","startFollow","key","updatePlayer","speed","isDown","setVelocity","isHosting","guestConnections","hostConnection","length","result","characters","i","charAt","floor","random","generateId","peer","Peer","host","port","path","secure","log","err","disconnect","reconnect","async","connection2","send","setupConnectionHandlers","onGuestConnected","metadata","connect","onConnectedToHost","data","keys","open","conn","ensureConnectionOpen","onMessage","state","players","sendToAllGuests","sendToHost","metaData","addPlayer","message","onChange","values","updatedPlayer","__assign","sendPlayerStateToHost","window","config","AUTO","width","height","parent","default","arcade","gravity","mode","Scale","FIT","Preloader","Game","querySelector","style","display","game","set","onload","userNameInput","joinGameIdInput","joinButton","addEventListener","value","username","name","beginHosting","newUrl","origin","pathname","history","pushState","playerDetails","connectToHost","e"],"mappings":"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"}