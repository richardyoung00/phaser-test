var e=Object.defineProperty,t=Object.assign,s=(t,s,o)=>("symbol"!=typeof s&&(s+=""),s in t?e(t,s,{enumerable:!0,configurable:!0,writable:!0,value:o}):t[s]=o);import{P as o,a as i,e as a}from"./vendor.456c7e55.js";!function(e=".",t="__import__"){try{self[t]=new Function("u","return import(u)")}catch(s){const o=new URL(e,location),i=e=>{URL.revokeObjectURL(e.src),e.remove()};self[t]=e=>new Promise(((s,a)=>{const n=new URL(e,o);if(self[t].moduleMap[n])return s(self[t].moduleMap[n]);const r=new Blob([`import * as m from '${n}';`,`${t}.moduleMap['${n}']=m;`],{type:"text/javascript"}),l=Object.assign(document.createElement("script"),{type:"module",src:URL.createObjectURL(r),onerror(){a(new Error(`Failed to import: ${e}`)),i(l)},onload(){s(self[t].moduleMap[n]),i(l)}});document.head.appendChild(l)})),self[t].moduleMap={}}}("/phaser-test/assets/");class n extends o.Scene{constructor(){super("preloader")}preload(){this.load.spritesheet("sokoban","/phaser-test/assets/sokoban_tilesheet.a7f7b83c.png",{frameWidth:64}),this.load.image("character","/phaser-test/assets/characters.abe55e0a.png"),this.load.image("concrete","/phaser-test/assets/concrete.b037b885.jpg"),this.load.image("bullet_1","/phaser-test/assets/bullet_1.9a497132.png"),this.load.atlasXML("tanks","/phaser-test/assets/sheet_tanks.545bac47.png","/phaser-test/assets/sheet_tanks.23e8bf82.xml"),this.load.spritesheet("map","/phaser-test/assets/tilesheet_map.a3075eac.png",{frameWidth:64})}create(){this.scene.start("game")}}class r extends o.Physics.Arcade.Sprite{constructor(e,t,s){super(e,t,s,"bullet_1"),this.worldBounds=e.physics.world.bounds}fire(e,t,s,o){this.body.reset(e,t),this.body.setCollideWorldBounds(!1),this.setActive(!0),this.setVisible(!0),this.scene.physics.velocityFromRotation(s,o.projectile_speed,this.body.velocity)}preUpdate(e,t){super.preUpdate(e,t),this.worldBounds.contains(this.x,this.y)||(this.setActive(!1),this.setVisible(!1))}}class l extends o.Physics.Arcade.Group{constructor(e,t){super(e.physics.world,e),this.weaponData=t,this.createMultiple({frameQuantity:this.weaponData.max_projectiles,key:this.weaponData.texture,active:!1,visible:!1,bounceX:1,bounceY:1,classType:r})}fireBullet(e,t,s){if(Date.now()-this.lastFire<this.weaponData.fire_delay)return;let o=this.getFirstDead(!1);return o&&(o.fire(e,t,s,this.weaponData),this.lastFire=Date.now()),o}}const c=[{id:"base",name:"Base Map",height:1e3,width:1e3,tileTexture:"map",tileTextureFrame:0,objects:[{texture:"map",textureFrame:357,x:0,y:0,playerCollision:!0,bulletCollision:!0}]}];const h=[{id:"blaster",name:"Blaster",texture:"tanks",textureFrame:"bulletSilver",scale:.4,tint:0,max_projectiles:10,fire_delay:600,max_bounces:1,projectile_speed:600}];function d(e){return h.find((t=>t.id===e))}class p extends Phaser.Physics.Arcade.Sprite{constructor(e){super(e.scene,e.x,e.y,e.texture,e.textureFrame),e.group.add(this),e.scene.add.existing(this),e.scene.physics.add.existing(this),this.config=e,this.setScale(e.scale),this.setRotation(e.rotation),this.setTint(e.tint),this.setVelocity(e.velocityX,e.velocityY),this.setBounce(1,1),this.numCollisions=0}didCollideWithObject(e){this.numCollisions++,this.numCollisions>this.config.maxBounces?this.destroy():(console.log("change velocity"),this.emit("invert-velocity-y"))}}class u extends o.Scene{constructor(){super("game"),s(this,"cursors"),s(this,"player"),this.player=null,this.players={},this.projectiles={}}init(){var e;this.cursors=this.input.keyboard.addKeys({up:o.Input.Keyboard.KeyCodes.UP,down:o.Input.Keyboard.KeyCodes.DOWN,left:o.Input.Keyboard.KeyCodes.LEFT,right:o.Input.Keyboard.KeyCodes.RIGHT,space:o.Input.Keyboard.KeyCodes.SPACE,shift:o.Input.Keyboard.KeyCodes.SHIFT,up_alt:o.Input.Keyboard.KeyCodes.W,down_alt:o.Input.Keyboard.KeyCodes.S,left_alt:o.Input.Keyboard.KeyCodes.A,right_alt:o.Input.Keyboard.KeyCodes.D}),this.connection=this.registry.get("connection"),this.gameState=this.registry.get("gameState"),this.mapData=(e=this.gameState.getMapName(),c.find((t=>t.id===e))),window.game=this}create(){this.playersGroup=this.physics.add.group(),this.projectilesGroup=this.physics.add.group(),this.objectPlayerCollideGroup=this.add.group(),this.objectProjectileCollideGroup=this.physics.add.staticGroup(),this.scale;const e=this.connection.hostId;this.peerId=this.connection.peerId,this.isHost=this.connection.isHosting,this.createMap(),this.setupCollisions(),this.add.text(6,6,"Game join code: "+e,{font:"12px Arial",fill:"#ffffff"}).setScrollFactor(0),this.renderSprites(),this.input.on("pointermove",(e=>{if(!this.player)return;const t=o.Math.Angle.Between(this.player.sprite.x,this.player.sprite.y,e.x+this.cameras.main.scrollX,e.y+this.cameras.main.scrollY);this.player.turret.setRotation(t+Math.PI/2)})),this.input.on("pointerdown",(e=>{this.shootWeapon()}))}createMap(){const{width:e,height:t,tileTexture:s,tileTextureFrame:o,objects:i}=this.mapData;this.add.tileSprite(0,0,e,t,s,o);for(let a of i){const e=this.physics.add.image(a.x,a.y,a.texture,a.textureFrame);e.body.setImmovable(!0),a.playerCollision&&this.objectPlayerCollideGroup.add(e),a.bulletCollision&&(this.objectProjectileCollideGroup.add(e),this.objectProjectileCollideGroup.refresh())}this.physics.world.setBounds(-e/2,-t/2,e,t)}setupCollisions(){console.log("setting colllsions"),this.physics.add.collider(this.playersGroup,this.playersGroup),this.physics.add.collider(this.objectPlayerCollideGroup,this.playersGroup),this.physics.add.collider(this.objectProjectileCollideGroup,this.projectilesGroup,this.onProjectileCollideWithObject),this.physics.add.overlap(this.playersGroup,this.projectilesGroup,this.onProjectileCollideWithPlayer)}onProjectileCollideWithObject(e,t){}onProjectileCollideWithPlayer(e,t){}shootWeapon(){const e=this.player.turret.getTopCenter(null,!0),t=e.x,s=e.y,o=this.player.turret.rotation-Math.PI/2,i={playerId:this.peerId,x:t,y:s,direction:o};this.gameState.shootWeapon(i)}renderSprites(){this.renderPlayers(),this.renderProjectiles()}renderPlayers(){const e=this.gameState.getPlayers();for(let t of e)if(this.players[t.id]){const{sprite:e,turret:s,label:o}=this.players[t.id];e.setX(t.x).setY(t.y),e.setTexture(t.texture,t.textureFrame).setRotation(t.rotation),s.setX(e.body.x+e.displayWidth/2).setY(e.body.y+e.displayHeight/2),s.setRotation(t.turretRotation),o.setX(e.body.x).setY(e.body.y+e.displayHeight+10),"disconnected"===t.status&&(e.setActive(!1),e.setVisible(!1),s.setActive(!1),s.setVisible(!1),o.setActive(!1),o.setVisible(!1))}else{const e=this.physics.add.sprite(t.x,t.y,t.texture,t.textureFrame);this.playersGroup.add(e),e.setRotation(t.rotation).setDrag(500).setScale(t.scale);const s=this.add.text(e.body.x,e.body.y+40,t.name,{font:"12px Arial",fill:"#ffffff",align:"center"}),o=this.add.sprite(t.x,t.y,"tanks","barrelBlack").setRotation(t.rotation).setOrigin(.5,1.2).setScale(t.scale),i=d(t.weapon),a=new l(this,i);this.players[t.id]={label:s,sprite:e,turret:o,weapon:a},t.id===this.peerId&&(this.player=this.players[t.id],this.cameras.main.startFollow(e)),e.setCollideWorldBounds(!0)}}renderProjectiles(){const e=this.gameState.getProjectiles();for(let o of e)if(this.projectiles[o.id])this.isHost||(this.projectiles[o.id].setX(o.x),this.projectiles[o.id].setY(o.y));else{let e=new p(t({scene:this,group:this.projectilesGroup},o));this.projectiles[o.id]=e,e.on("destroy",(()=>{this.gameState.removeProjectile(e.config.id),delete this.projectiles[e.config.id]})),e.on("bounce-off-horizontal",(()=>{this.gameState.updateProjectile({id:e.config.id,velocityY:-e.config.velocityY})}))}const s=e.map((e=>e.id));for(let[t,o]of Object.entries(this.projectiles))s.includes(t)||(o.destroy(),delete this.projectiles[t])}updatePlayerState(){let e={id:this.peerId,x:this.player.sprite.x,y:this.player.sprite.y,texture:this.player.sprite.texture.key,textureFrame:this.player.sprite.frame.name,rotation:this.player.sprite.rotation,turretRotation:this.player.turret.rotation};this.gameState.updatePlayer(e)}updateProjectileStates(){const e=[];for(let[t,s]of Object.entries(this.projectiles))this.physics.world.bounds.contains(s.x,s.y)||(s.destroy(),this.gameState.removeProjectile(t),delete this.projectiles[t]),e.push({id:t,x:s.x,y:s.y});this.gameState.updateProjectiles(e)}setPlayerVelocity(e,t){this.player.sprite.body.setVelocity(e,t)}update(){if(!this.player)return;const e=200;this.cursors.left.isDown||this.cursors.left_alt.isDown?(this.setPlayerVelocity(-200,0),this.player.sprite.setRotation(3*Math.PI/2)):this.cursors.right.isDown||this.cursors.right_alt.isDown?(this.player.sprite.body.setVelocity(e,0),this.player.sprite.setRotation(Math.PI/2)):this.cursors.up.isDown||this.cursors.up_alt.isDown?(this.player.sprite.body.setVelocity(0,-200),this.player.sprite.setRotation(0)):(this.cursors.down.isDown||this.cursors.down_alt.isDown)&&(this.player.sprite.body.setVelocity(0,e),this.player.sprite.setRotation(Math.PI)),this.updatePlayerState(),this.isHost&&this.updateProjectileStates(),this.renderSprites()}}const y={texture:"tanks",textureFrame:"tankBlack",scale:.5,weapon:"blaster",rotation:0,turretRotation:0},m=new class{constructor(){this.isHosting=null,this.guestConnections={},this.hostConnection=null,this.peerId=function(e=6){let t="";const s="abcdefghijklmnopqrstuvwxyz0123456789";for(let o=0;o<e;o++)t+=s.charAt(Math.floor(Math.random()*s.length));return t}(),this.hostId=null,this.peer=new i(this.peerId,{host:"richard-peerjs-server.herokuapp.com",port:443,path:"/",secure:!0}),this.peer.on("open",(e=>{this.peerId=e,console.log("Connection to server established. ID is: "+e)})),this.peer.on("error",(e=>{console.log("Error1: ",e),console.log("reconnecting"),this.peer.disconnect(),this.peer.reconnect()}))}async beginHosting(){this.isHosting=!0,this.hostId=this.peerId,this.peer.on("connection",(async e=>{this.guestConnections[e.peer]=e,e.send("hello from host"),console.log("Connecting to peer "+e.peer),await this.setupConnectionHandlers(e),this.onGuestConnected&&this.onGuestConnected(e.peer,e.metadata)}))}async connectToHost(e,t){this.isHosting=!1,console.log("connecting to "+e),this.hostConnection=this.peer.connect(e,{metadata:t}),this.hostConnection.send("hello from guest"),this.hostId=this.hostConnection.peer,console.log("waiting for connection..."),await this.setupConnectionHandlers(this.hostConnection),this.onConnectedToHost&&this.onConnectedToHost(this.hostConnection.peer,this.hostConnection.metadata)}sendToHost(e){if(this.isHosting)throw new Error("Cannot send data to host if you are hosting");this.hostConnection.send(e)}sendToGuest(e,t){if(!this.isHosting)throw new Error("Cannot send data to guest if you are not the host");this.guestConnections[e].send(t)}sendToAllGuests(e){if(!this.isHosting)throw new Error("Cannot send data to guest if you are not the host");for(let t of Object.keys(this.guestConnections))this.guestConnections[t].open&&this.guestConnections[t].send(e)}async ensureConnectionOpen(e){return new Promise(((t,s)=>{e.open&&t(),console.log(e),e.on("open",(function(){console.log("Connection open"),t()})),e.on("error",(function(e){console.error("Connection error",e),s()})),this.peer.on("error",(e=>{console.error(e),s()}))}))}async setupConnectionHandlers(e){await this.ensureConnectionOpen(e),e.on("data",(e=>{this.onMessage&&this.onMessage(e)})),e.on("close",(()=>{this.onGuestDisconnected&&this.onGuestDisconnected(e.metadata)}))}},g=new class{constructor(e){this.connection=e,this.setupConnectionHandlers(),this.state={map:null,players:{},projectiles:{},messages:[]}}setMapName(e){this.state.map=e}getMapName(){return this.state.map}sendUpdatedGameState(){this.connection.isHosting?this.connection.sendToAllGuests({type:"game-state",data:this.state}):console.error("cannot sent data to all guests if you are not the host")}sendPlayerStateToHost(e){this.connection.isHosting?console.error("cannot sent player data to host if you are the host"):this.connection.sendToHost({type:"player-state",data:e})}setupConnectionHandlers(){this.connection.onGuestConnected=(e,t)=>{console.log("connected "+e),this.state.messages.push(t.name+" has joined the game"),this.addPlayer(t)},this.connection.onGuestDisconnected=e=>{console.log("player left "+e.id),this.state.messages.push(e.name+" has left the game"),this.removePlayer(e)},this.connection.onMessage=e=>{switch(e.type){case"game-state":this.state=e.data;break;case"player-state":this.state.players[e.data.id]=e.data,this.sendUpdatedGameState();break;case"shoot-weapon":this.addProjectile(e.data)}}}addPlayer(e){this.state.players[e.id]=e,this.state.players[e.id].status="connected",this.state.players[e.id].weapon="blaster",this.state.players[e.id].weaponLastFired=0,this.sendUpdatedGameState()}removePlayer(e){this.state.players[e.id].status="disconnected",this.sendUpdatedGameState()}removeProjectile(e){delete this.state.projectiles[e],this.sendUpdatedGameState()}getPlayers(){return Object.values(this.state.players)}getProjectiles(){return Object.values(this.state.projectiles)}updatePlayer(e){const s=this.state.players[e.id];a(s,e)||(this.state.players[e.id]=t(t({},this.state.players[e.id]),e),this.connection.isHosting?this.sendUpdatedGameState():this.sendPlayerStateToHost(this.state.players[e.id]))}updateProjectiles(e){for(let s of e)this.state.projectiles[s.id]&&(this.state.projectiles[s.id]=t(t({},this.state.projectiles[s.id]),s));this.sendUpdatedGameState()}updateProjectile(e){this.state.projectiles[e.id]&&(this.state.projectiles[e.id]=t(t({},this.state.projectiles[e.id]),e)),this.sendUpdatedGameState()}velocityFromRotation(e,t){const s=new o.Math.Vector2;return s.setToPolar(e,t),s}addProjectile(e){if(!this.connection.isHosting)return void console.error("only the host can add projectiles to the game state");const t=d(this.state.players[e.playerId].weapon),s=this.velocityFromRotation(e.direction,t.projectile_speed),o=e.playerId+"_"+Date.now();this.state.projectiles[o]={id:e.playerId+"_"+Date.now(),playerId:e.playerId,rotation:e.direction+Math.PI/2,x:e.x,y:e.y,texture:t.texture,textureFrame:t.textureFrame,scale:t.scale,tint:t.tint,velocityX:s.x,velocityY:s.y,maxBounces:t.max_bounces}}shootWeapon(e){this.connection.isHosting?this.addProjectile(e):this.connection.sendToHost({type:"shoot-weapon",data:e})}}(m);window.connection=m,window.gameState=g;const f={type:o.AUTO,width:800,height:600,parent:"game-container",physics:{default:"arcade",arcade:{gravity:{y:0},debug:!1}},scale:{mode:o.Scale.FIT},scene:[n,u]};function b(){document.querySelector("#game-setup").style.display="none";const e=new o.Game(f);e.registry.set("connection",m),e.registry.set("gameState",g)}function j(e){const t=document.querySelectorAll(".tabcontent");for(let o of t)o.style.display="none";const s=document.querySelectorAll("button.tablinks");for(let o of s)o.getAttribute("tab")===e?o.classList.add("active"):o.classList.remove("active");document.getElementById(e).style.display=""}window.onload=function(){const e=document.querySelector("#username"),s=document.querySelector("#join-game-id"),o=document.querySelector("#join-button"),i=document.querySelector("#host-button"),a=document.querySelectorAll("button.tablinks");for(let t of a)t.addEventListener("click",(()=>{j(t.getAttribute("tab"))}));j("join"),i.addEventListener("click",(()=>{e.value?function(e){m.beginHosting(),g.addPlayer(t(t({},y),{id:m.peerId,name:e,x:100,y:100})),g.setMapName("base");const s=window.location.origin+window.location.pathname+"?gameId="+m.hostId;window.history.pushState({path:s},"",s),b()}(e.value):alert("Please enter a username")})),o.addEventListener("click",(()=>{e.value?s.value?async function(e,s){const o=t(t({},y),{id:m.peerId,name:e,x:200,y:200});try{await m.connectToHost(s,o),b()}catch(i){alert("could not connect to game ID "+s)}}(e.value,s.value):alert("Please enter a game ID to join"):alert("Please enter a username")}));const n=new URLSearchParams(window.location.search);n.has("gameId")&&(s.value=n.get("gameId"))};
//# sourceMappingURL=index.2cd632a0.js.map
